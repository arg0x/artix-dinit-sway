#######################
# arg0x's sway config #
#######################

# colors from pywal
include "$HOME/.cache/wal/colors-sway"
include "$HOME/.config/colors/fuzzel-transparency"

# Autotiling
exec_always autotiling

# Hide title bar
default_border pixel 3
default_floating_border pixel 3
titlebar_padding 1
titlebar_border_thickness 1

# Using adobe-source-code-pro-fonts 
font pango:SourceCodePro 12 

# Gaps
gaps inner 3px
gaps outer 3px

# Caps to Esc
input "type:keyboard" xkb_options caps:swapescape

# Disable Mouse Acclearation
input "type:pointer" accel_profile flat


#############
# Variables #
#############

# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Your preferred terminal emulator
set $term alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu fuzzel -b $background$80 -t $foreground$100 -s $color2$100 -S $foreground$100 -B 3 -C $color3$80 -r 0
#--show run --log-colorize=always

########################
# Output configuration #
########################

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /home/argo/Pictures/walls/2BWall.jpeg fill


# pywal set wall and color
output * bg $wallpaper fill
client.focused $color3 $color3 $foreground $color3 $color3

# Example configuration:
#
output eDP-1 mode 1920x1080@120.213Hz position 0,0 
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

######################
# Idle configuration #
######################

# Example configuration:
#
#exec swayidle -w \
#         timeout 300 'swaylock -f -c 000000' \
#         timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#         before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration

# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

################
# Key bindings #
################

# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Wlogout
    bindsym $mod+Shift+e exec wlogout -p layer-shell

#################
# Moving around #
#################

    # Move your focus around
    # Using $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

#############
# Workspaces#
#############

    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

################
# Layout stuff #
################
    
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # Sticky Toggle
    bindsym $mod+Shift+s sticky toggle

##############
# Scratchpad #
##############

    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

#######################
# Resizing containers #
#######################

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"


####################
# Custom app rules #
####################

# for_window [app_id="Alacritty"] 
# for_window [class="discord"] opacity 0.90
# for_window [class="VSCodium"] opacity 0.90
# for_window [app_id="fuzzel"] opacity 0.90


##########
# Themes #
##########

set $gnome-schema org.gnome.desktop.interface
exec_always {
    gsettings set $gnome-schema gtk-theme 'linea-nord-color'
    gsettings set $gnome-schema icon-theme 'Gruvbox-Material-Dark'
    gsettings set $gnome-schema cursor-theme 'Adwaita'
#     #gsettings set org.gnome.desktop.interface color-scheme prefer-dark
#     #gsettings set $gnome-schema font-name 'SourceCodePro'

}

# Colors
# client.focused "#ea6962" "#1d2021" "#ffffff" "#ea6962"
# client.unfocused "#ea6962" "#1d2021" "#ffffff" "#ea6962"

# swaylock-effects
bindsym $mod+l exec swaylock -i $wallpaper --inside-clear-color $color6 --inside-ver-color $color2 --inside-wrong-color $color11 --key-hl-color $color2  --ring-color $background --ring-clear-color $background --ring-caps-lock-color $foreground --ring-ver-color $background --text-color $foreground --text-clear-color $background --text-caps-lock-color $foreground --bs-hl-color $color11 --caps-lock-bs-hl-color $color11 --caps-lock-key-hl-color $color10 --ring-wrong-color $color9

##############
# Screenshot #
##############

bindsym Print exec grim -g "$(slurp -o -r -c '#ff0000ff')" - | satty --filename - --fullscreen --output-filename ~/Pictures/Screenshots/satty-$(date '+%Y%m%d-%H:%M:%S').png


######################
# Custom keybindings #
######################

# Toggle Hide
bindsym $mod+m bar mode toggle

# Using brightnessctl 
# Set Root permission first: sudo chmod +s $(which brightnessctl)
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+

# Using playerctl
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Using wireplumber 
# To raise the volume, with a limit of 150%:
bindsym XF86AudioRaiseVolume exec wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 5%+
# To lower the volume:
bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
# To mute/unmute the volume:
bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
# To mute/unmute the microphone:
bindsym XF86AudioMicMute exec wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle


##############
# Status Bar #
##############

# Read `man 5 sway-bar` for more information about this section.
# When the status_command prints a new line to stdout, swaybar updates.
# The default just shows the current date and time.
# status_command while date +'%A, %d-%m-%Y %H:%M %j'; do sleep 1; done
#
bar {
    swaybar_command waybar
    position top	
}

include /etc/sway/config.d/*
